var facebookAppId;
! function(e, o, n) {
    var s = e.getElementsByTagName(o)[0];
    e.getElementById(n) || ((e = e.createElement(o)).id = n, e.src = "//connect.facebook.net/en_US/sdk.js", s.parentNode.insertBefore(e, s))
}(document, "script", "facebook-jssdk"), (facebookAppId = "undefined" != typeof qodefSocialLoginVars ? qodefSocialLoginVars.social.facebookAppId : facebookAppId) && (window.fbAsyncInit = function() {
    FB.init({
        appId: facebookAppId,
        cookie: !0,
        xfbml: !0,
        version: "v5.0"
    }), window.FB = FB
}),
function(a) {
    "use strict";
    var e = {};

    function o() {
        var e, o = a(".qodef-login-opener"),
            n = a(".qodef-login-register-holder");
        a(document.body).on("open_user_login_trigger", function() {
            n.fadeIn(300), n.addClass("opened")
        }), o && (e = a(".qodef-login-register-content"), o.on("click", function(e) {
            e.preventDefault(), n.fadeIn(300), n.addClass("opened")
        }), n.on("click", function(e) {
            n.hasClass("opened") && (n.fadeOut(300), n.removeClass("opened"))
        }), e.on("click", function(e) {
            e.stopPropagation()
        }), a(window).on("keyup", function(e) {
            n.hasClass("opened") && 27 === e.keyCode && (n.fadeOut(300), n.removeClass("opened"))
        }), e.tabs())
    }

    function n() {
        a(".qodef-login-form").on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "setsail_membership_login_user",
                security: a(this).find("#qodef-login-security").val(),
                login_data: a(this).serialize()
            };
            return a.ajax({
                type: "POST",
                data: e,
                url: qodefGlobalVars.vars.qodefAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            }), !1
        })
    }

    function s() {
        a(".qodef-register-form").on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "setsail_membership_register_user",
                security: a(this).find("#qodef-register-security").val(),
                register_data: a(this).serialize()
            };
            return a.ajax({
                type: "POST",
                data: e,
                url: qodefGlobalVars.vars.qodefAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            }), !1
        })
    }

    function t() {
        var o = a(".qodef-reset-pass-form");
        o.on("submit", function(e) {
            e.preventDefault();
            e = {
                action: "setsail_membership_user_lost_password",
                user_login: o.find("#user_reset_password_login").val()
            };
            a.ajax({
                type: "POST",
                data: e,
                url: qodefGlobalVars.vars.qodefAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    i(e), "success" === e.status && (window.location = e.redirect)
                }
            })
        })
    }

    function i(e) {
        var o = a(".qodef-membership-response-holder"),
            n = _.template(a(".qodef-membership-response-template").html()),
            s = "success" === e.status ? "qodef-membership-message-succes" : "qodef-membership-message-error",
            n = n({
                messageClass: s,
                message: e.message
            });
        o.html(n)
    }

    function d() {
        a(".qodef-facebook-login-holder").on("submit", function(e) {
            e.preventDefault(), window.FB.login(function(e) {
                "connected" === (e = e).status ? (console.log("Welcome! Fetching information from Facebook..."), FB.api("/me", "GET", {
                    fields: "id, name, email, link, picture"
                }, function(e) {
                    var o = a(".qodef-facebook-login-holder [name^=qodef_nonce_facebook_login]").val();
                    e.nonce = o, e.image = e.picture.data.url, a.ajax({
                        type: "POST",
                        data: {
                            action: "setsail_membership_check_facebook_user",
                            response: e
                        },
                        url: qodefGlobalVars.vars.qodefAjaxUrl,
                        success: function(e) {
                            e = JSON.parse(e);
                            i(e), "success" === e.status && (window.location = e.redirect)
                        }
                    })
                })) : "not_authorized" === e.status ? console.log("Please log into this app") : console.log("Please log into Facebook")
            }, {
                scope: "email, public_profile"
            })
        })
    }

    function r() {
        var e;
        (e = "undefined" != typeof qodefSocialLoginVars ? qodefSocialLoginVars.social.googleClientId : e) ? gapi.load("auth2", function() {
            window.auth2 = gapi.auth2.init({
                client_id: e
            }), a(".qodef-google-login-holder").on("submit", function(e) {
                var o;
                e.preventDefault(), window.auth2.signIn(), window.auth2.isSignedIn.get() && (e = window.auth2.currentUser.get().getBasicProfile(), o = a(".qodef-google-login-holder [name^=qodef_nonce_google_login]").val(), e = {
                    action: "setsail_membership_check_google_user",
                    response: {
                        id: e.getId(),
                        name: e.getName(),
                        email: e.getEmail(),
                        image: e.getImageUrl(),
                        link: "https://plus.google.com/" + e.getId(),
                        nonce: o
                    }
                }, a.ajax({
                    type: "POST",
                    data: e,
                    url: qodefGlobalVars.vars.qodefAjaxUrl,
                    success: function(e) {
                        e = JSON.parse(e);
                        i(e), "success" === e.status && (window.location = e.redirect)
                    }
                }))
            })
        }): a(".qodef-google-login-holder").on("submit", function(e) {
            e.preventDefault()
        })
    }
    "undefined" != typeof qodef && (qodef.modules.socialLogin = e), e.qodefUserLogin = n, e.qodefUserRegister = s, e.qodefUserLostPassword = t, e.qodefInitLoginWidgetModal = o, e.qodefInitFacebookLogin = d, e.qodefInitGooglePlusLogin = r, e.qodefRenderAjaxResponseMessage = i, a(document).ready(function() {
        o(), n(), s(), t(),
            function() {
                var e = a(".qodef-mobile-header .qodef-user-logged-in");
                e.length && e.each(function() {
                    var e = a(this),
                        o = e.find(".qodef-logged-in-user"),
                        n = e.find(".qodef-login-dropdown");
                    o.on("click", function(e) {
                        e.preventDefault(), n.hasClass("qodef-active") ? n.removeClass("qodef-active") : n.addClass("qodef-active")
                    })
                })
            }()
    }), a(window).on("load", function() {
        d(), r(),
            function() {
                a(".qodef-membership-main-wrapper");
                var e = a(".page-template-user-dashboard .qodef-content"),
                    o = a(".qodef-page-footer"),
                    n = 0;
                !qodef.body.hasClass("qodef-header-transparent") && 1024 < qodef.windowWidth && (n = n + qodefGlobalVars.vars.qodefMenuAreaHeight + qodefGlobalVars.vars.qodefLogoAreaHeight);
                0 < o.length && (n += o.outerHeight());
                1024 < qodef.windowWidth && (o = qodef.windowHeight - n, e.css({
                    "min-height": o + "px"
                }))
            }()
    })
}(jQuery),
function(s) {
    "use strict";
    var e = {};

    function o() {
        n(), s(document.body).on("setsail_membership_favorites_trigger", function() {
            n()
        })
    }

    function n() {
        s(".qodef-membership-item-favorites").on("click", function(e) {
            e.preventDefault();
            var o, e = s(this),
                n = (void 0 !== e.data("item-id") && (o = e.data("item-id")), e),
                e = o;
            e = {
                action: "setsail_membership_add_item_to_favorites",
                item_id: o
            }, s.ajax({
                type: "POST",
                data: e,
                url: qodefGlobalVars.vars.qodefAjaxUrl,
                success: function(e) {
                    e = JSON.parse(e);
                    "success" === e.status && (n.hasClass("qodef-icon-only") || n.find("span").text(e.data.message), n.find(".qodef-favorites-icon").removeClass("fa-heart fa-heart-o").addClass(e.data.icon))
                }
            })
        })
    }(qodef.modules.membershipFavorites = e).qodefOnDocumentReady = o, s(document).ready(o)
}(jQuery);